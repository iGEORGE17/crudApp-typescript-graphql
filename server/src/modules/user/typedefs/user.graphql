scalar DateTime

type User {
  id: ID!
  username: String!
  email: String!
  avatar: String
  bio: String
  isAdmin: Boolean
  createdAt: DateTime!
  updatedAt: DateTime!
  
}

type Query {
  me: User!
  getUser(id: ID!): User!
  listUsers: [User!]!
}

type AuthPayload {
  token: String!
  user: User!
}

input UserInput {
  username: String!
  email: String!
  password: String!  
}

input LoginInput {
  email: String!
  password: String!
}


type Mutation {
  createUser(input: UserInput!): User!
  loginUser(input: LoginInput!): AuthPayload!
  updateUser(id: ID!, input: UserInput!): User!
  deleteUser(id: ID!): Boolean!
}

